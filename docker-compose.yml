version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  order-service:
    build:
      context: .
      dockerfile: services/order_service/Dockerfile
    container_name: order_service
    ports:
      - "8001:8001"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  inventory-service:
    build:
      context: .
      dockerfile: services/inventory_service/Dockerfile
    container_name: inventory_service
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  payment-service:
    build:
      context: .
      dockerfile: services/payment_service/Dockerfile
    container_name: payment_service
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  notification-service:
    build:
      context: .
      dockerfile: services/notification_service/Dockerfile
    container_name: notification_service
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: admin
      RABBITMQ_PASS: admin
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped